// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace StudentDetailsManagement.Entity
{
    public partial class StudentDetailsContext : DbContext
    {
        public StudentDetailsContext()
        {
        }

        public StudentDetailsContext(DbContextOptions<StudentDetailsContext> options): base(options)
        {
        }
        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                //#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer(@"Data Source=(localdb)\MSSQLLocalDB;Initial Catalog=Freasher2021");
            }
        }
        public virtual DbSet<StudentDetails> StudentDetails { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<StudentDetails>(entity =>
            {
                entity.HasKey(e => e.StudentId)
                    .HasName("PK__StudentD__A2F4E98C945F0BDA");

                entity.Property(e => e.StudentId).HasColumnName("Student_Id");

                entity.Property(e => e.ChemistryMark).HasColumnName("Chemistry_Mark");

                entity.Property(e => e.ComputerScienceMark).HasColumnName("Computer_Science_Mark");

                entity.Property(e => e.CreatedTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("Created_Time_Stamp")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DateOfBirth)
                    .HasColumnType("datetime")
                    .HasColumnName("Date_Of_Birth");

                entity.Property(e => e.FavoriteSubject)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("Favorite_Subject");

                entity.Property(e => e.FisrtName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Fisrt_Name");

                entity.Property(e => e.InterestedCourse)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("Interested_Course");

                entity.Property(e => e.IsDeleted)
                    .HasColumnName("Is_Deleted")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.LastName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("Last_Name");

                entity.Property(e => e.MathsMark).HasColumnName("Maths_Mark");

                entity.Property(e => e.UpdatedTimeStamp)
                    .HasColumnType("datetime")
                    .HasColumnName("Updated_Time_Stamp")
                    .HasDefaultValueSql("(getdate())");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}